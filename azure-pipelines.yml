# Build ASP.NET Core project using Azure Pipelines
# Documentation: https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core?view=vsts

# Définition de l'image VM pour l'exécution du pipeline
pool:
  name: SH1  # Remplacez SH1 par le bon nom si nécessaire

# Définition des variables utilisées dans le pipeline
variables:
  nodeVersion: 'v23.9.0'
  projectFolder: 'src/angular'
  buildOutputFolder: 'src/angular/dist/angular'

# Étapes de la construction
steps:

# Installation de Node.js
- task: NodeTool@0
  inputs:
    versionSpec: '$(nodeVersion)'
  displayName: 'Install Node.js'

# Installation des dépendances
- script: |
    echo "Installing dependencies..."
    npm ci
    if [ $? -ne 0 ]; then
      echo "npm ci failed. Exiting..."
      exit 1
    fi
    npm install -g @angular/cli
    if [ $? -ne 0 ]; then
      echo "npm install -g @angular/cli failed. Exiting..."
      exit 1
    fi
  displayName: 'Install dependencies'

# Compilation TypeScript et build du projet Angular
- script: npm run build
  displayName: 'Compile TypeScript and Build'

# Exécution des tests unitaires avec Jest
- script: npm run test:jest
  displayName: 'Run jest unit tests'

# Copie des fichiers générés vers le dossier de staging
- task: CopyFiles@2
  inputs:
    sourceFolder: '$(buildOutputFolder)' 
    contents: '**/*' 
    targetFolder: '$(Build.ArtifactStagingDirectory)'
    cleanTargetFolder: true
  displayName: 'Copy built files to staging directory'

# Archivage des fichiers en un fichier ZIP
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    includeRootFolder: false
  displayName: 'Archive files into a ZIP package'

# Publication de l'archive en tant qu'artifact de build
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
  displayName: 'Publish the build artifact'

# Publication des artefacts finaux
- task: PublishBuildArtifacts@1
  inputs:
    artifactName: 'dist'
    pathtoPublish: 'dist'
  displayName: 'Publish Artifacts'
